{
  "webProject": {
    "header": "Meine Webseite",
    "text": "Diese Website ist nicht nur ein Überblick über meine bisherigen Projekte - sie ist selbst eines. Als hauptsächlich Backend-orientierter Entwickler wollte ich mit dieser Seite zeigen, dass ich auch im Frontend zu Hause bin. Die Seite wurde mit React umgesetzt und verwendet tsparticles für den animierten Hintergrund und GSAP für die sanften Scroll-Animationen. Um die Seite mehrsprachig zu machen, habe ich auch i18next integriert. Ziel war es, eine moderne, performante und interaktive Plattform zu schaffen, auf der ich mich und meine Arbeit authentisch präsentieren kann.",
    "more": {
      "Source Code": "https://github.com/Skippaddin/resume-website"
    }
  },

  "minecraft": {
    "header": "Minecraft Server Plugins",
    "text": "Um meine Java-Kenntnisse aufzufrischen und praxisnah mit Echtzeitanwendungen zu arbeiten, habe ich mehrere Plugins für PaperMC und Spigot entwickelt. Eines dieser Plugins ist eine Umsetzung einer Challenge, inspiriert von einem bekannten YouTuber: Ziel ist es, alle möglichen Items aus Kisten jeder Struktur zu sammeln – aber mit einer besonderen Einschränkung: Items können ausschließlich aus Kisten erlangt werden. Weder das Abbauen von Blöcken noch das Töten von Mobs liefert Loot. Man darf außerdem pro Struktur erst dann zur nächsten übergehen, wenn alle potenziellen Items, die in deren Kisten generiert werden können, gesammelt wurden.<br/><br/>Diese Einschränkungen fordern kreative Herangehensweisen – sowohl vom Spieler als auch von der technischen Umsetzung. Eine besondere Herausforderung war es, zuverlässig zu erkennen, ob eine geöffnete Truhe zu einer bestimmten Struktur gehört, und unberechtigtes Öffnen zu verhindern. Dabei musste ich mit den Limitierungen der API umgehen: Das Öffnen einer Truhe triggert das GenerateLootEvent. In diesem Event kann man anhand eines Keys in der Loottable herausfinden zu welcher Weltstruktur diese Truhe gehört. Dementsprechend war mein erster Ansatz dieses Event abzubrechen. Danach wird das InventoryOpenEvent getriggert, welches ich dann versuchte abzubrechen. Um jedoch zu sehen, ob das Inventar geschlossen werden muss, musste ich auf die Loottable zugreifen, was wiederum das GenerateLootEvent triggerte. Somit hatte ich eine Endlosschleife.<br/><br/>Die Lösung: Ich lasse das Loot generieren, ändere aber beim Erzeugen den Namen eines Items temporär in den Namen der Struktur. Im InventoryOpenEvent kann ich dann prüfen, ob die Kiste zur aktuellen Struktur passt. Falls nicht, wird das Inventar geschlossen. Ist sie korrekt, wird der Itemname wieder zurückgesetzt.<br/>Dieses Projekt hat mir nicht nur geholfen, komplexere Event-Ketten in der Bukkit-API zu meistern, sondern auch mein Verständnis für effiziente und kreative Lösungsansätze innerhalb enger Rahmenbedingungen gestärkt.",
    "more": {
      "All & Only Chest": "https://github.com/Skippaddin/All-and-Only-Chests",
      "BowMotion": "https://github.com/Skippaddin/BowMotion"
    }
  },

  "bachelorThesis": {
    "header": "Bachelorarbeit - Auditive Aufmerksamkeitsverfolgung kontinuierlich bewegender Tonquellen anhand von EEG-Signalen mit KI",
    "text": "In meiner <strong>Bachelorarbeit</strong> habe ich untersucht, wie sich die Position einer sich kontinuierlich bewegenden Tonquelle – also der horizontale Winkel – anhand von EEG-Daten (Gehirnwellensignale) bestimmen lässt. Die Versuchspersonen konzentrierten sich dabei auf eine akustische Repräsentation einer summenden Biene, die sich vor ihnen im Raum bewegte.<br/><br/>Zur Analyse habe ich bestehende neuronale Netzwerke, insbesondere EEGNet und ShallowNet, an die Aufgabenstellung angepasst und um zusätzliche Komponenten erweitert. Die Modelle wurden mit PyTorch trainiert und mittels TensorBoard überwacht. Für die Auswertung und Visualisierung der Ergebnisse kam Seaborn zum Einsatz.<br/><br/>Ich verfolgte sowohl klassifikationsbasierte Ansätze, bei denen die horizontalen Winkel in Kategorien eingeteilt wurden, als auch regressionsbasierte Verfahren, die kontinuierliche Vorhersagen ermöglichen. Obwohl die Regression interessante Tendenzen zeigte, lieferten Klassifikationsmodelle insgesamt robustere und genauere Ergebnisse. Besonders effektiv war die Erweiterung der Modelle durch LSTM-Schichten, mit denen sich die zeitliche Struktur der EEG-Signale besser nutzen ließ.<br/><br/>Die Arbeit wurde mit der Note 1,3 bewertet. Die Erkenntnisse tragen zur aktuellen Forschung im Bereich der auditiven Wahrnehmung bei – mit dem langfristigen Ziel, unter anderem intelligentere und kontextbewusstere Hörgeräte zu entwickeln, die auf Gehirnsignale reagieren können."
  },

  "bachelorProject": {
    "header": "Bachelorprojekt - ePro",
    "text": "Im Rahmen meines Bachelorprojekts arbeitete ich in einer Projektgruppe an „ePro“, einer Webanwendung zur Planung und Durchführung klinischer Studien. Das Projekt war eines von mehreren Teilprojekten innerhalb des Bachelorprojekts, die alle im Gesundheitsbereich angesiedelt waren. Zwischen den Gruppen fand regelmäßiger Wissensaustausch statt, wodurch interdisziplinäre Lösungen und technische Unterstützung möglich wurden.<br/><br/>Ziel unseres Projekts war die Entwicklung einer Plattform, über die sich Studien effizient verwalten und digital durchführen lassen. Das System bestand aus zwei zentralen Komponenten: <ul><li>Einer Webanwendung für das Studienpersonal, in der man Teilnehmer verwalten, Studien anlegen, sowie Fragebögen mit einem flexiblen Baukastensystem erstellen konnte. Dieses unterstützte verschiedene Fragetypen wie Single-Choice, Multiple-Choice, Skalen, numerische Eingaben mit Min/Max, sowie Bild-Uploads.</li><br/><li>Einer mobilen App für Studienteilnehmer, über die die Umfragen beantwortet werden konnten. Fragebögen wurden automatisch als Templates gespeichert, um sie in anderen Studien wiederverwenden oder anpassen zu können.</li></ul><strong>Meine Rolle im Projekt:</strong><br/>Ich war verantwortlich für den technischen Grundaufbau und das Backend des Projekts:<ul><li>Aufsetzen der Systemarchitektur mit PostgreSQL, Redis und Celery zur Ausführung von Hintergrund- und periodischen Tasks</li><br/><li>Entwicklung des Backends mit Django, inkl.:</li><ul><li>REST-APIs für Web-Frontend und App</li><li>Websockets zur Echtzeitkommunikation</li><li>CSV-Import/-Export</li><li>Push-Benachrichtigungen</li></ul><br/><li>Containerisierung des gesamten Projekts mit Docker</li><li>Mitarbeit an kleineren Komponenten im Frontend (Vue.js) sowie der Flutter-App</li><li>Technischer Ansprechpartner im Team bei Architektur- und Implementierungsfragen</li></ul>Zusätzlich unterstützte ich eine andere Gruppe bei der Backend-Entwicklung einer App, die mithilfe von KI eine Einschätzung für Dengue-Fieber anhand medizinischer Daten liefert.<br/><br/>Mein Teilnahme an dem Projekt wurde mit der Note 1,0 bewertet und bot mir die Möglichkeit, meine Fähigkeiten im Bereich Backend-Entwicklung, DevOps und Teamkommunikation in einem praxisnahen medizinischen Anwendungskontext weiterzuentwickeln.",
    "more": {
      "Webseite": "https://mobile4d-projekt.de"
    }
  },

  "gradeBook": {
    "header": "Studierendenverwaltung – Webanwendung für Dozierende und Tutor:innen",
    "text": "Im Rahmen eines Gruppenprojekts an der Hochschule entwickelten wir eine Webanwendung zur Verwaltung von Studierenden, Veranstaltungen und Leistungserhebungen. Die Anwendung richtete sich an Dozierende und Tutor:innen, die damit Veranstaltungen organisieren, Studierende strukturieren und Leistungen erfassen konnten. Studierende selbst hatten keinen Zugriff auf das System.<br/><br>Die Anwendung wurde vollständig in Java EE entwickelt. Für das Frontend kamen JSF in Kombination mit PrimeFaces zum Einsatz. Als Architektur nutzten wir das MVC-Modell, mit Hibernate als ORM und WildFly als Applikationsserver.<br/><br/><strong>Hauptfunktionen der Anwendung:</strong><ul><li>Veranstaltungsmanagement: Anlegen und Verwalten von Lehrveranstaltungen, Zuweisung von Studierenden</li><br/><li>Tutorienverwaltung: Erstellung und Verwaltung von Tutorien mit zugeordneten Tutor:innen und Studierendengruppen</li><br/><li>Aufgabenblätter: Erstellung von Übungsblättern mit gewichteten Aufgaben, inklusive Bewertungskriterien und Bestehensregeln (z. B. mindestens 50 % korrekt, n–1 Regel)</li><br/><li>Leistungsübersicht: Automatische Berechnung von Gesamtnoten unter Berücksichtigung individueller Gewichtungen von Aufgabenblättern und Prüfungen</li><br/><li>Gruppenverwaltung: Zuweisung und Verwaltung von Studierendengruppen innerhalb von Tutorien für Gruppenaufgaben</li></ul><strong>Mein Beitrag:</strong><br/>Ich war in mehreren Kernbereichen der Anwendung aktiv:<ul><li>Implementierung von:</li><ul><li>Gruppenverwaltung</li><li>Veranstaltungserstellung</li><li>Aufgabenblatterstellung und -konfiguration (inkl. Gewichtung und Regeln)</li><li>Benutzeranlage und Bearbeitung von Studierenden</li></ul><ul></ul><br/><li>Leistungsberechnung:</li><ul><li>Komplette Umsetzung der Notenberechnung auf Basis gewichteter Aufgabenblätter und Prüfungen</li></ul><br/><li>Datenbankinteraktion:</li><ul><li>Erstellung zahlreicher SQL-Queries für nahezu alle funktionalen Bereiche</li></ul><br/><li>Architekturdokumentation:</li><ul><li>Mitarbeit an einer umfangreichen technischen Dokumentation, inkl.:</li><ul><li>Einflussfaktoren und Problemstellungen</li><li>Konzeptuelle und modulare Sicht (inkl. Klassendiagrammen)</li><li>Datensicht, Sequenzdiagrammen</li><li>Benutzeranleitung und Deploymentbeschreibung</li></ul></ul></ul>Das Projekt bot mir die Möglichkeit, tief in Java-Enterprise-Technologien einzusteigen, systematisch komplexe Anforderungen umzusetzen und dabei auch Softwarearchitektur in einem realistischen Szenario zu modellieren und dokumentieren."
  },

  "technologies": "Technologien",
  "show": "mehr anzeigen",
  "hide": "weniger anzeigen",
  "more": "Mehr Info"
}